needsPackage("Posets", FileName=>"/home/math dept/workshops/IMA-2011/Posets/Posets.m2");
--needsPackage"Posets"

-------------------------------------------------------------------------------------------------------------------------------------------------------------

distributivePoset = method();
distributivePoset Poset := P ->(
	L:=apply(subsets(P.GroundSet),i->i);
	G:={};
	J:={};
	R:={};
	K:={};
	--Q:=poset(flatten {P.GroundSet,0^}
	for i to #L-1 do(
		for j to #L_i-1 do (
			K=append(K,apply(minimalElements P, p->closedInterval(P,p,L_i_j)));
		);
		if K != {} then{
		for k to #K-1 do(
			if k == 0 then{
				Q=first K_0;
			};
			Q=mergePoset(Q,first K_k);
		);
		J=append(J,Q);
		};
		K={};
	);  
	for i to #J-1 do(
		if not member(sort (J_i).GroundSet,G) then{
			G=append(G,sort (J_i).GroundSet);
		};
	);
	J=apply(G,j->subPoset(P,j));
	for i to #G-1 do(
		for j to #G-1 do(
			if j!=i then{	
			if isSubset(G_i,G_j) then{
				R=append(R,(G_i,G_j));
			};
			};
		);
	);
	POI:=poset(G,R);
	POI.cache.OriginalPoset=P;
	POI	
);

-------------------------------------------------------------------------------------------------------------------------------------------------------------


R=QQ[x_1..x_100];
P=poset({x_1,x_2,x_3,x_4},{(x_1,x_2),(x_1,x_3),(x_2,x_4),(x_3,x_4)});
Q=poset({x_1,x_2,x_3,x_4,x_5,x_6,x_7,x_8},{(x_1,x_2),(x_1,x_3),(x_2,x_4),(x_3,x_4),(x_5,x_6),(x_6,x_8),(x_7,x_8)});
L=poset({x_5,x_6,x_7,x_8},{(x_5,x_6),(x_6,x_8),(x_7,x_8)});
H=poset({x_1,x_2,x_9},{(x_1,x_2),(x_2,x_9)});
