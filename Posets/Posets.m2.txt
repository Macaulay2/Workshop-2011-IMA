needsPackage("Posets", FileName=>"/home/math dept/workshops/IMA-2011/Posets/Posets.m2");
--needsPackage"Posets"


-------------------------------------------------------------------------------------------------------------------------------------------------------------

--Finished
distributiveLattice = method();
distributiveLattice (Poset):=P->(
	L:=apply(subsets(P.GroundSet),i->i);
	J:={};
	G:={};
	R:={};
	Q:={};
	for i to #L-1 do(
		if L_i != {} then{
		K:=apply(L_i, p->orderIdeal(P,p));
		for k to #K-1 do(
			if k == 0 then{
				Q=K_k;
			};
			Q=join(Q,K_k);
		);
		Q=unique flatten Q;
		J=append(J,Q);
		};
	);
	for i to #J-1 do(
		if not member(sort (J_i),G) then{
			G=append(G,sort (J_i));
		};
	);
	for i to #G-1 do(
		for j to #G-1 do(
			if j!=i then{	
				if isSubset(G_i,G_j) then{
					R=append(R,(G_i,G_j));
				};
			};
		);
	);
	POI:=poset(G,R);
	POI.cache.OriginalPoset=P;
	POI		
);

-------------------------------------------------------------------------------------------------------------------------------------------------------------

--Needs Checking
--baseDistributiveLattice = method ();
--baseDistributiveLattice (Poset) := P->(
--	subPoset(P,meetIrreducibles(P))
--); 

-------------------------------------------------------------------------------------------------------------------------------------------------------------


R=QQ[x_1..x_100];
P=poset({x_1,x_2,x_3,x_4},{(x_1,x_2),(x_1,x_3),(x_2,x_4),(x_3,x_4)});
Q=poset({x_1,x_2,x_3,x_4,x_5,x_6,x_7,x_8},{(x_1,x_2),(x_1,x_3),(x_2,x_4),(x_3,x_4),(x_5,x_6),(x_6,x_8),(x_7,x_8)});
L=poset({x_5,x_6,x_7,x_8},{(x_5,x_6),(x_6,x_8),(x_7,x_8)});
H=poset({x_1,x_2,x_9},{(x_1,x_2),(x_2,x_9)});
